(set-logic CHC_LIA)

(synth-fun main@.lr.ph ((x_0 Bool) (x_1 Bool) (x_2 Int)) Bool)

(synth-fun main@.preheader.i.i ((x_0 Bool) (x_1 Int) (x_2 Int) (x_3 Int) (x_4 Int)) Bool)

(synth-fun main@entry () Bool)

(synth-fun main@.lr.ph.split.us.split.us ((x_0 Bool) (x_1 Int)) Bool)

(synth-fun main@.lr.ph.split.split.us ((x_0 Bool) (x_1 Int)) Bool)

(synth-fun main@verifier.error.split () Bool)

(synth-fun main@.backedge.i.backedge.us ((x_0 Bool)) Bool)

(constraint (forall ((CHC_COMP_UNUSED Bool)) (=> (and true) main@entry)))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Bool) (O Bool) (P Int)) (=> (and main@entry (and (= A C) (= M 0) (= B (+ 8 C)) (= G H) (not (<= C 0)) (or (not L) (not K) (= N I)) (or (not L) (not K) (= O J)) (or (not L) (not K) (= P M)) (or (not L) (not E) (not F)) (or (<= C 0) (not (<= A 0))) (or (<= C 0) (not (<= B 0))) (or (not K) (and L K)) (or (not L) (and L E)) (not I) (= K true) (= J true) (= F (= D 0)))) (main@.lr.ph N O P))))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool)) (=> (and main@entry (and (= A C) (= B (+ 8 C)) (not (<= C 0)) (or (not F) (not I) (= H G)) (or E (not F) (not I)) (or (not (<= A 0)) (<= C 0)) (or (not (<= B 0)) (<= C 0)) (or (not I) (and F I)) (or H (not I)) (or (not J) (and J I)) (or (not K) (and K J)) (not G) (= K true) (= E (= D 0)))) main@verifier.error.split)))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int)) (=> (and (main@.lr.ph M E A) (and (= L (= I 0)) (= V (= U 0)) (= W (and Y V)) (= Q M) (= B1 Y) (= Y (= Z 0)) (= C (= A 1)) (= H (= F 1)) (= P 0) (= E1 Z) (= T 0) (or (not D1) (and S R) (and D1 O)) (or (not D1) (not C1) (= F1 A1)) (or (not D1) (not C1) (= G1 B1)) (or (not D1) (not C1) (= H1 E1)) (or (not D1) (not W) (not C1)) (or (not D1) (not O) (= X N)) (or (not D1) (not O) (= Z P)) (or (not D) (not G) (not E)) (or (not S) (not R) (= X Q)) (or (not S) (not R) (= Z T)) (or (not S) (not R) L) (or C (not D) (not B)) (or (not J) (not K) (not M)) (or (not J) (not R) (not L)) (or H (not R) (not G)) (or (not G) (and D G)) (or (not K) (and J K)) (or (not C1) (and D1 C1)) (or (not O) (and O K)) (or (not R) (and R G)) (or (not D) (and D B)) (or (not S) R) (or (not J) (and J R)) (= C1 true) (not N) (= A1 X))) (main@.lr.ph F1 G1 H1))))
(constraint (forall ((A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Int)) (=> (and (main@.lr.ph G D H) (and (or D (not E) (not C)) (or (not B) (not C) (not A)) (or (not F) (and E F)) (or (not C) (and C A)) (or (not E) (and E C)) (= F true) (= B (= H 1)))) (main@.lr.ph.split.split.us G H))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool)) (=> (and (main@.lr.ph K E A) (and (= H (= F 1)) (or (not G) (not H) (not I)) (or (not E) (not G) (not D)) (or (not B) C (not D)) (or (not D) (and B D)) (or (not I) (and G I)) (or (not G) (and G D)) (or (not J) (and J I)) (= J true) (= C (= A 1)))) (main@.backedge.i.backedge.us K))))
(constraint (forall ((A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Bool) (H Int)) (=> (and (main@.lr.ph G D H) (and (or D (not E) (not C)) (or B (not C) (not A)) (or (not F) (and E F)) (or (not C) (and C A)) (or (not E) (and E C)) (= F true) (= B (= H 1)))) (main@.lr.ph.split.us.split.us G H))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Int) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool)) (=> (and (main@.lr.ph M E A) (and (= C (= A 1)) (= X (= U 0)) (= E1 C1) (= Y (and W X)) (= Q M) (= H (= F 1)) (= W (= V 0)) (= L (= I 0)) (= T 0) (= P 0) (or (not K) M (not H1)) (or (not I1) (and I1 G1) (and I1 H1)) (or (not B) (not D) C) (or (not D1) (not G1) (= F1 E1)) (or (not A1) (and R S) (and A1 O)) (or (not A1) (not O) (= Z N)) (or (not A1) (not O) (= V P)) (or (not A1) (not D1) (= C1 B1)) (or (not A1) (not D1) Y) (or (not E) (not D) (not G)) (or (not J) (not K) (not M)) (or (not R) H (not G)) (or (not R) (not S) (= Z Q)) (or (not R) (not S) (= V T)) (or (not R) (not L) (not K)) (or (not R) L (not S)) (or (not O) (and J O)) (or (not G) (and D G)) (or (not H1) (and K H1)) (or (not K) (and R K)) (or (not G1) (and D1 G1)) (or F1 (not G1)) (or (not D) (and B D)) (or (not D1) (and A1 D1)) (or (not J1) (and J1 I1)) (or (not J) (and J K)) (or (not R) (and R G)) (or R (not S)) (not N) (= J1 true) (= B1 Z))) main@verifier.error.split)))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Int)) (=> (and (main@.lr.ph.split.split.us H I) (and (= C (= A 0)) (or (not E) (not F) (not G)) (or (not C) (not F) (not B)) (or (not F) (and F B)) (or (not E) (and E F)) (= E true) (= G (= D 0)))) (main@.lr.ph.split.split.us H I))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Bool) (P Bool) (Q Int) (R Int) (S Bool) (T Bool) (U Int) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Bool) (B1 Bool) (C1 Int) (D1 Int) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int) (I1 Bool) (J1 Int) (K1 Int) (L1 Int) (M1 Int)) (=> (and (main@.lr.ph.split.split.us I1 J1) (and (= P (= N 0)) (= B1 (= Z 3)) (= T (= R 0)) (= C (= A 0)) (= W (= U 0)) (= K (+ 52 K1)) (= H I) (= L M) (= E1 (+ 16 C1)) (= H1 0) (= Q M1) (= I (+ 48 K1)) (= X Y) (= J K) (= Y (+ 4 C1)) (= M (+ 16 K1)) (= M1 (+ 32 K1)) (= D1 E1) (= K1 G) (or (not V) W (not A1)) (or (not S) (not V) T) (or (not G1) (not F1) (= L1 H1)) (or (not G1) B1 (not A1)) (or (not B) C (not D)) (or (not O) (not E) (not F)) (or (not O) (not S) (not P)) (or (not F1) (and G1 F1)) (or (not D) (and B D)) (or (not A1) (and V A1)) (or (not V) (and S V)) (or (not E) (and E D)) (or (not S) (and O S)) (or (not G1) (and G1 A1)) (or (not O) (and O E)) (= F1 true) (= F (= G 0)))) (main@.preheader.i.i I1 J1 K1 L1 M1))))
(constraint (forall ((A Int) (B Int) (C Int) (D Bool) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Int) (S Int) (T Int) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool) (G1 Bool) (H1 Bool) (I1 Bool) (J1 Bool) (K1 Bool) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Bool) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Bool)) (=> (and (main@.lr.ph.split.split.us R1 A) (and (= G (= B 0)) (= P1 R1) (= E1 (= U 0)) (= E (= C 0)) (= I1 (= P 0)) (= X1 R1) (= H1 (= T 0)) (= V1 R1) (= M1 R1) (= B1 (= Y 3)) (= J1 (= I 0)) (= W X) (= K (+ 48 Q)) (= M (+ 52 Q)) (= O (+ 16 Q)) (= L M) (= N O) (= X (+ 4 V)) (= J K) (= S (+ 32 Q)) (= R S) (= Q I) (or (not Z1) (and S1 Z1) (and W1 Z1) (and Z1 U1)) (or (not W1) (and D1 C1) (and Z A1) (and F1 G1)) (or (not Z1) (not U1) (= Y1 V1)) (or (not F) G (not H)) (or (not W1) (not Z1) (= Y1 X1)) (or (not Z) (not C1) E1) (or (not O1) (not N1) (= Q1 P1)) (or (not K1) (not I1) (not F1)) (or (not K1) (not L1) (= Q1 M1)) (or (not K1) (not L1) I1) (or (not H1) (not F1) (not G1)) (or H1 (not C1) (not F1)) (or (not S1) (and K1 L1) (and O1 N1)) (or (not S1) (not Z1) (= Y1 T1)) (or (not D) (not F) (not G)) (or (not D) E (not U1)) (or (not D1) (not C1) (not E1)) (or (not B1) (not Z) (not A1)) (or J1 (not O1) (not N1)) (or (not J1) (not K1) (not N1)) (or (not H) (and F H)) (or (not U1) (and D U1)) (or (not F1) (and K1 F1)) (or F1 (not G1)) (or (not C1) (and C1 F1)) (or (not N1) (and N1 H)) (or Y1 (not Z1)) (or (not A2) (and A2 Z1)) (or (not Z) (and Z C1)) (or Z (not A1)) (or (not O1) N1) (or (not K1) (and K1 N1)) (or K1 (not L1)) (or (not D) (and D F)) (or (not B2) (and B2 A2)) (or (not D1) C1) (= B2 true) (= T1 Q1))) main@verifier.error.split)))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Bool) (S Bool) (T Bool) (U Bool) (V Int) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Int) (B1 Bool) (C1 Bool) (D1 Int)) (=> (and (main@.backedge.i.backedge.us I) (and (= H (= E 0)) (= C (= A 1)) (= R (= Q 0)) (= S (and U R)) (= M I) (= X U) (= U (= V 0)) (= L 0) (= A1 V) (= P 0) (or (not Z) (and O N) (and Z K)) (or (not Z) (not Y) (= B1 W)) (or (not Z) (not Y) (= C1 X)) (or (not Z) (not Y) (= D1 A1)) (or (not Z) (not S) (not Y)) (or (not Z) (not K) (= T J)) (or (not Z) (not K) (= V L)) (or (not O) (not N) (= T M)) (or (not O) (not N) (= V P)) (or (not O) (not N) H) (or (not F) (not G) (not I)) (or (not F) (not N) (not H)) (or (not D) (not B) C) (or (not G) (and F G)) (or (not Y) (and Z Y)) (or (not K) (and K G)) (or (not N) (and D N)) (or (not O) N) (or (not F) (and F N)) (or (not D) (and D B)) (= Y true) (not J) (= W T))) (main@.lr.ph B1 C1 D1))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Bool)) (=> (and (main@.backedge.i.backedge.us E) (and (or (not D) (not B) (not C)) (or (not B) (and B C)) (= B true) (= D (= A 1)))) (main@.backedge.i.backedge.us E))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Int) (Q Int) (R Int) (S Bool) (T Bool) (U Bool) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Bool) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Bool) (F1 Bool)) (=> (and (main@.backedge.i.backedge.us I) (and (= C (= A 1)) (= T (= Q 0)) (= A1 Y) (= U (and S T)) (= M I) (= S (= R 0)) (= H (= E 0)) (= P 0) (= L 0) (or (not G) I (not D1)) (or (not E1) (and E1 C1) (and E1 D1)) (or (not B) (not D) C) (or (not Z) (not C1) (= B1 A1)) (or (not W) (and N O) (and W K)) (or (not W) (not K) (= V J)) (or (not W) (not K) (= R L)) (or (not W) (not Z) (= Y X)) (or (not W) (not Z) U) (or (not F) (not G) (not I)) (or (not N) (not O) (= V M)) (or (not N) (not O) (= R P)) (or (not N) (not H) (not G)) (or (not N) H (not O)) (or (not K) (and F K)) (or (not D1) (and G D1)) (or (not G) (and N G)) (or (not C1) (and Z C1)) (or B1 (not C1)) (or (not D) (and B D)) (or (not Z) (and W Z)) (or (not F1) (and F1 E1)) (or (not F) (and F G)) (or (not N) (and N D)) (or N (not O)) (not J) (= F1 true) (= X V))) main@verifier.error.split)))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Bool) (E Int) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Bool) (P Int) (Q Bool) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Bool) (Y Bool) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Bool) (E1 Int) (F1 Bool) (G1 Bool) (H1 Int)) (=> (and (main@.lr.ph.split.us.split.us M A) (and (= L (= I 0)) (= G (= E 1)) (= V (= U 0)) (= W (and Y V)) (= D (not (<= 1 E))) (= Q M) (= B1 Y) (= Y (= Z 0)) (= P 0) (= E1 Z) (= T 0) (or (not D1) (and S R) (and D1 O)) (or (not D1) (not C1) (= F1 A1)) (or (not D1) (not C1) (= G1 B1)) (or (not D1) (not C1) (= H1 E1)) (or (not D1) (not W) (not C1)) (or (not D1) (not O) (= X N)) (or (not D1) (not O) (= Z P)) (or (not S) (not R) (= X Q)) (or (not S) (not R) (= Z T)) (or (not S) (not R) L) (or (not C) (not D) (not F)) (or (not J) (not K) (not M)) (or (not J) (not R) (not L)) (or (not H) (not F) G) (or (not K) (and J K)) (or (not C1) (and D1 C1)) (or (not O) (and O K)) (or (not R) (and H R)) (or (not F) (and C F)) (or (not S) R) (or (not C) (and C B)) (or (not J) (and J R)) (or (not H) (and H F)) (= C1 true) (not N) (= A1 X))) (main@.lr.ph F1 G1 H1))))
(constraint (forall ((A Bool) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Bool) (K Bool) (L Int) (M Bool) (N Bool) (O Bool) (P Bool) (Q Int)) (=> (and (main@.lr.ph.split.us.split.us P Q) (and (= O (= L 0)) (= G (= D 1)) (= C (not (<= 1 D))) (or (not F) (not G) (not E)) (or (not M) (not N) (not O)) (or (not K) (and H I) (and F E)) (or (not H) (not I) (not J)) (or (not B) (not C) (not E)) (or (not B) (not H) C) (or (not E) (and B E)) (or (not F) E) (or (not N) (and K N)) (or (not M) (and M N)) (or (not H) (and B H)) (or H (not I)) (or (not B) (and B A)) (= M true) (= J (= D 0)))) (main@.lr.ph.split.us.split.us P Q))))
(constraint (forall ((A Bool) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Bool) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Int) (Q Int) (R Bool) (S Bool) (T Int) (U Int) (V Bool) (W Bool) (X Int) (Y Bool) (Z Bool) (A1 Int) (B1 Int) (C1 Int) (D1 Bool) (E1 Bool) (F1 Int) (G1 Int) (H1 Int) (I1 Bool) (J1 Bool) (K1 Int) (L1 Bool) (M1 Int) (N1 Int) (O1 Int) (P1 Int)) (=> (and (main@.lr.ph.split.us.split.us L1 M1) (and (= S (= Q 0)) (= E1 (= C1 3)) (= W (= U 0)) (= F (= D 0)) (= Z (= X 0)) (= C (not (<= 1 D))) (= N (+ 52 N1)) (= K L) (= O P) (= H1 (+ 16 F1)) (= K1 0) (= T P1) (= L (+ 48 N1)) (= A1 B1) (= M N) (= B1 (+ 4 F1)) (= P (+ 16 N1)) (= P1 (+ 32 N1)) (= G1 H1) (= N1 J) (or (not Y) Z (not D1)) (or (not V) (not Y) W) (or (not J1) (not I1) (= O1 K1)) (or (not J1) E1 (not D1)) (or (not E) F (not G)) (or (not E) C (not B)) (or (not R) (not H) (not I)) (or (not R) (not V) (not S)) (or (not I1) (and J1 I1)) (or (not G) (and E G)) (or (not D1) (and Y D1)) (or (not Y) (and V Y)) (or (not H) (and H G)) (or (not V) (and R V)) (or (not J1) (and J1 D1)) (or (not B) (and B A)) (or (not E) (and E B)) (or (not R) (and R H)) (= I1 true) (= I (= J 0)))) (main@.preheader.i.i L1 M1 N1 O1 P1))))
(constraint (forall ((A Int) (B Bool) (C Bool) (D Int) (E Bool) (F Bool) (G Bool) (H Bool) (I Int) (J Bool) (K Bool) (L Bool) (M Bool) (N Bool) (O Int) (P Bool) (Q Bool) (R Bool) (S Bool) (T Bool) (U Int) (V Int) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Bool) (M1 Bool) (N1 Bool) (O1 Bool) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Bool) (V1 Bool) (W1 Bool) (X1 Int) (Y1 Bool) (Z1 Bool) (A2 Bool) (B2 Int) (C2 Int) (D2 Int) (E2 Bool) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Bool) (K2 Bool) (L2 Bool) (M2 Bool) (N2 Bool) (O2 Bool) (P2 Bool) (Q2 Bool) (R2 Bool) (S2 Bool) (T2 Bool) (U2 Bool) (V2 Bool) (W2 Bool) (X2 Bool) (Y2 Bool) (Z2 Bool) (A3 Bool) (B3 Bool) (C3 Bool) (D3 Bool) (E3 Bool) (F3 Bool)) (=> (and (main@.lr.ph.split.us.split.us U2 A) (and (= J2 (= U 0)) (= Y1 U2) (= E2 (= D2 0)) (= I2 (= B1 0)) (= S (= I 0)) (= A3 U2) (= G2 (and F2 E2)) (= Q (= O 0)) (= L (= I 1)) (= M2 H2) (= Q1 (= G1 0)) (= T1 (= F1 0)) (= P2 U2) (= S2 U2) (= H (not (<= 1 I))) (= W2 T2) (= N1 (= K1 3)) (= U1 (= D 0)) (= F2 (= C2 0)) (= C1 U) (= E1 (+ 32 C1)) (= X Y) (= A1 (+ 16 C1)) (= I1 J1) (= Y (+ 52 C1)) (= J1 (+ 4 H1)) (= D1 E1) (= B2 0) (= Z A1) (= X1 0) (= W (+ 48 C1)) (= V W) (or (not V2) (and N2 O2) (and Q2 R2) (and L2 K2)) (or (not C3) (and Z2 C3) (and C3 V2) (and C3 X2)) (or (not Z2) (and S1 R1) (and M1 L1) (and P1 O1)) (or (not N) (and K J) (and R M)) (or (not K2) (and A2 Z1) (and W1 K2)) (or (not W1) (not K2) (= H2 V1)) (or (not W1) (not K2) (= D2 X1)) (or Q (not P) (not X2)) (or (not R) (not S) (not M)) (or L (not J) (not C)) (or Q1 (not O1) (not L1)) (or (not Q1) (not P1) (not O1)) (or (not C3) (not X2) (= B3 Y2)) (or (not C3) (not V2) (= B3 W2)) (or (not E3) (and E3 C3) (and E3 D3)) (or (not F) (not U2) (not E)) (or (not F) U2 (not D3)) (or (not K) (not L) (not J)) (or (not T) (not R) S) (or (not L2) (not K2) (= T2 M2)) (or (not L2) G2 (not K2)) (or (not H) (not G) (not J)) (or H (not G) (not R)) (or (not Z2) (not C3) (= B3 A3)) (or (not R1) T1 (not O1)) (or (not Q2) (not R2) (= T2 S2)) (or (not Q2) (not R2) J2) (or (not N1) (not M1) (not L1)) (or (not S1) (not R1) (not T1)) (or (not A2) (not Z1) (= H2 Y1)) (or (not A2) (not Z1) (= D2 B2)) (or (not U1) (not Z1) (not F)) (or U1 (not A2) (not Z1)) (or (not N2) (not O2) (= T2 P2)) (or (not N2) (not O2) I2) (or (not N2) (not R1) (not I2)) (or (not N2) (not Q2) (not J2)) (or (not C) (and J C)) (or (not L1) (and O1 L1)) (or (not O1) (and R1 O1)) (or (not P1) O1) (or (not E) (and F E)) (or (not X2) (and P X2)) (or (not W1) (and W1 E)) (or (not D3) (and F D3)) (or (not J) (and G J)) (or (not P) (and P N)) (or (not M1) L1) (or (not R) (and G R)) (or R (not M)) (or B3 (not C3)) (or (not F) (and Z1 F)) (or (not K) J) (or (not Z1) (and Z1 C)) (or (not T) (and T R)) (or (not G) (and G B)) (or (not L2) K2) (or (not R1) (and N2 R1)) (or (not Q2) (and Q2 T)) (or Q2 (not R2)) (or (not S1) R1) (or (not F3) (and F3 E3)) (or (not A2) Z1) (or (not N2) (and N2 Q2)) (or N2 (not O2)) (not V1) (= F3 true) (= Y2 U2))) main@verifier.error.split)))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Bool) (U Bool) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Bool) (T1 Bool) (U1 Int) (V1 Int) (W1 Bool) (X1 Bool) (Y1 Int) (Z1 Int) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Int) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Int) (K2 Bool) (L2 Bool) (M2 Int)) (=> (and (main@.preheader.i.i S1 U1 L1 B C) (and (= W (= S 0)) (= Q1 (= O1 0)) (= Q (not (<= O N))) (= A2 (= Z1 0)) (= B2 (and D2 A2)) (= G2 D2) (= D2 (= E2 0)) (= L (+ C D)) (= F1 G1) (= K1 (+ 128 L1)) (= H1 I1) (= N1 (+ 136 L1)) (= E (+ A (* 64 B))) (= H (+ 2 F)) (= N (+ 1 B)) (= X Y) (= O M) (= Z A1) (= F E) (= K L) (= Y (+ 56 L1)) (= I1 (+ 112 L1)) (= G H) (= E1 (+ 96 L1)) (= J1 K1) (= V1 (+ 1 U1)) (= J2 E2) (= Y1 V1) (= R Y) (= A1 (+ 80 L1)) (= D (* 4 N)) (= I J) (= G1 (+ 104 L1)) (= M1 N1) (= D1 E1) (= C1 (+ 88 L1)) (= B1 C1) (or (not P1) (and U V) (and T P1)) (or (not P1) Q1 (not R1)) (or (not I2) (not H2) (= K2 F2)) (or (not I2) (not H2) (= L2 G2)) (or (not I2) (not H2) (= M2 J2)) (or (not I2) (not B2) (not H2)) (or (not S1) (not T1) (not R1)) (or (not X1) (not I2) (= C2 W1)) (or (not X1) (not I2) (= E2 Y1)) (or (not U) W (not V)) (or (not U) (not P) (not Q)) (or (not U) (not T) (not W)) (or (<= A 0) (not (<= E 0))) (or (not R1) (and P1 R1)) (or (not H2) (and I2 H2)) (or (not T) (and U T)) (or (not T1) (and T1 R1)) (or (not I2) (and X1 I2)) (or (not X1) (and X1 T1)) (or (not U) (and U P)) (or U (not V)) (= H2 true) (not W1) (= F2 C2))) (main@.lr.ph K2 L2 M2))))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Bool) (O Int) (P Bool) (Q Bool) (R Int) (S Bool) (T Int) (U Int) (V Int) (W Int)) (=> (and (main@.preheader.i.i S T U B W) (and (= E D) (= D (+ A (* 64 B))) (= O (+ 1 B)) (= R O) (= G (+ 2 E)) (= K (+ W C)) (= H I) (= F G) (= C (* 4 O)) (= J K) (= M L) (or (not Q) (not P) (= V R)) (or N (not Q) (not P)) (or (<= A 0) (not (<= D 0))) (or (not P) (and Q P)) (= P true) (= N (not (<= M O))))) (main@.preheader.i.i S T U V W))))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int) (I Int) (J Int) (K Int) (L Int) (M Int) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Bool) (U Bool) (V Bool) (W Bool) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Int) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Int) (K1 Int) (L1 Int) (M1 Int) (N1 Int) (O1 Int) (P1 Bool) (Q1 Bool) (R1 Bool) (S1 Int) (T1 Int) (U1 Bool) (V1 Bool) (W1 Int) (X1 Int) (Y1 Int) (Z1 Bool) (A2 Bool) (B2 Bool) (C2 Bool) (D2 Bool) (E2 Bool) (F2 Bool) (G2 Bool) (H2 Bool) (I2 Bool) (J2 Bool) (K2 Bool) (L2 Bool) (M2 Bool) (N2 Bool) (O2 Bool) (P2 Bool) (Q2 Bool)) (=> (and (main@.preheader.i.i H2 S1 L1 B C) (and (= J2 G2) (= Q (not (<= O N))) (= L2 H2) (= F2 D2) (= C2 (and Z1 A2)) (= A2 (= X1 0)) (= Z1 (= Y1 0)) (= Q1 (= O1 0)) (= N (+ 1 B)) (= J1 K1) (= I J) (= L (+ C D)) (= R Y) (= Z A1) (= B1 C1) (= E (+ A (* 64 B))) (= D1 E1) (= T1 (+ 1 S1)) (= A1 (+ 80 L1)) (= O M) (= C1 (+ 88 L1)) (= M1 N1) (= X Y) (= K L) (= I1 (+ 112 L1)) (= N1 (+ 136 L1)) (= F E) (= W1 T1) (= E1 (+ 96 L1)) (= H (+ 2 F)) (= K1 (+ 128 L1)) (= D (* 4 N)) (= G H) (= Y (+ 56 L1)) (= H1 I1) (= G1 (+ 104 L1)) (= F1 G1) (or (not P1) (and T P1) (and U V)) (or (not U) (not V) W) (or (not E2) (not V1) (= D2 U1)) (or (not E2) (not V1) (= Y1 W1)) (or (not E2) (not I2) (= G2 F2)) (or (not T) (not U) (not W)) (or (not P) (not Q) (not U)) (or C2 (not E2) (not I2)) (or (not N2) (and K2 N2) (and N2 I2)) (or (not N2) (not I2) (= M2 J2)) (or (not P2) (and P2 N2) (and P2 O2)) (or (not K2) (not N2) (= M2 L2)) (or (not B2) H2 (not O2)) (or (not B2) (not H2) (not R1)) (or (not Q1) (not K2) (not P1)) (or Q1 (not B2) (not P1)) (or (not (<= E 0)) (<= A 0)) (or (not V1) (and R1 V1)) (or (not I2) (and E2 I2)) (or (not O2) (and B2 O2)) (or (not U) (and P U)) (or U (not V)) (or (not E2) (and E2 V1)) (or (not R1) (and B2 R1)) (or (not T) (and T U)) (or M2 (not N2)) (or (not K2) (and K2 P1)) (or (not B2) (and B2 P1)) (or (not Q2) (and Q2 P2)) (not U1) (= Q2 true) (= W (= S 0)))) main@verifier.error.split)))
(constraint (forall ((CHC_COMP_UNUSED Bool)) (=> (and main@verifier.error.split true) false)))

(check-synth)

