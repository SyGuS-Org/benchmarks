(set-logic CHC_LIA)

(synth-fun state ((x_0 Bool) (x_1 Bool) (x_2 Bool) (x_3 Bool) (x_4 Bool) (x_5 Int) (x_6 Int) (x_7 Int) (x_8 Int)) Bool)

(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.k Int) (main.j Int) (main.i Int)) (=> (and (not .s.1) .s.0 (not .s.2) (not .s.3) (not .s.4)) (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.k main.j main.i))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.k Int) (main.j Int) (main.i Int) (n.next Int) (main.k.next Int) (main.j.next Int) (main.i.next Int) (.s.4.next Bool) (.s.3.next Bool) (.s.2.next Bool) (.s.1.next Bool) (.s.0.next Bool)) (let ((a!1 (and (not .s.3) (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!2 (and (not .s.3.next) (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!4 (not (and (not .s.4) .s.3 (and .s.2 (and .s.1 .s.0))))) (a!5 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next .s.0.next)))) (a!6 (and (not .s.4) .s.3 (and .s.2 (and .s.1 (not .s.0))))) (a!7 (and (not .s.4.next) (not .s.3.next) (and (not .s.2.next) (and .s.1.next .s.0.next)))) (a!8 (and (not .s.4) .s.3 (and (and (not .s.1) .s.0) .s.2))) (a!9 (= (+ main.i (* (- 1) main.i.next)) (- 1))) (a!11 (and (not .s.4) .s.3 (and .s.2 (and (not .s.1) (not .s.0))))) (a!12 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 .s.0)))) (a!14 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!15 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) .s.0.next)))) (a!17 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 (not .s.0))))) (a!18 (and (not .s.4.next) (not .s.3.next) (and .s.2.next (and .s.1.next .s.0.next)))) (a!19 (and (not .s.4) (and (and (not .s.1) .s.0) (not .s.2)) .s.3)) (a!20 (= (+ main.j (* (- 1) main.j.next)) (- 1))) (a!22 (and (not .s.4) .s.3 (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!23 (= (+ main.k (* (- 1) main.k.next) (* (- 1) main.j) main.i) 0)) (a!25 (and (not .s.4) (not .s.3) (and .s.2 (and .s.1 .s.0)))) (a!26 (<= (+ main.j (* (- 1) main.i)) (- 1))) (a!28 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!29 (and (not .s.4) (not .s.3) (and .s.2 (and .s.1 (not .s.0))))) (a!30 (and (not .s.4) (not .s.3) (and (and (not .s.1) .s.0) .s.2))) (a!31 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!32 (and (not .s.4) (not .s.3) (and .s.2 (and (not .s.1) (not .s.0))))) (a!33 (<= (+ main.k (* (- 1) main.i)) (- 1))) (a!34 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and .s.2.next (and (not .s.1.next) .s.0.next)))) (a!36 (and (not .s.4) (not .s.3) (and (not .s.2) (and .s.1 .s.0)))) (a!37 (<= 1 (+ n (* (- 1) main.i)))) (a!38 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!40 (and (not .s.4) (not .s.3) (and (not .s.2) (and .s.1 (not .s.0))))) (a!41 (and (and (and (not .s.1) .s.0) (not .s.2)) (not .s.3) (not .s.4))) (a!42 (and (= n n.next) (= main.j main.j.next) (= main.i.next 1) (= main.k.next 1) (not .s.4.next) (not .s.3.next) (and (not .s.2.next) (and .s.1.next (not .s.0.next)))))) (let ((a!3 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) a!2)) (a!10 (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) a!9 (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!13 (not (and a!12 (not (<= main.i main.j))))) (a!16 (or (not (and a!12 (<= main.i main.j))) a!15)) (a!21 (and (= n n.next) (= main.k main.k.next) (= main.i main.i.next) a!20 (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!24 (or (not a!22) (and (= n n.next) (= main.j main.j.next) (= main.i main.i.next) a!23 (not .s.4.next) .s.3.next (not .s.2.next) (and (not .s.1.next) .s.0.next)))) (a!27 (or (not (and a!25 (not a!26))) (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next .s.0.next))))) (a!35 (or (not (and a!32 (not a!33))) a!34)) (a!39 (or (not (and a!36 (not a!37))) (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) .s.4.next a!2)))) (let ((a!43 (or a!3 (not (and (not .s.4) a!1))))) (let ((a!44 (and (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.k main.j main.i) (or (not (and .s.4 a!1)) a!3) (or a!4 a!5) (or (not a!6) (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) a!7)) (or (not a!8) a!10) (or a!3 (not a!11)) (or a!13 a!14) a!16 (or (not a!17) (and (= n n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) a!18)) (or (not a!19) a!21) a!24 a!27 (or (not (and a!25 a!26)) a!28) (or (not a!29) (and (= n n.next) (= main.k main.k.next) (= main.i main.i.next) a!18 (= main.j.next 0))) (or (not a!30) a!31) a!35 (or a!5 (not (and a!32 a!33))) (or (not (and a!36 a!37)) a!38) a!39 (or (not a!40) (and (= n n.next) (= main.k main.k.next) (= main.i main.i.next) a!7 (= main.j.next 0))) (or (not a!41) a!42) a!43))) (=> a!44 (state .s.1.next .s.0.next .s.2.next .s.3.next .s.4.next n.next main.k.next main.j.next main.i.next))))))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.k Int) (main.j Int) (main.i Int)) (let ((a!1 (not (not (and (not .s.4) .s.3 .s.2 .s.1 .s.0))))) (=> (and (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.k main.j main.i) a!1) false))))

(check-synth)

