(set-logic CHC_LIA)

(synth-fun state ((x_0 Bool) (x_1 Bool) (x_2 Bool) (x_3 Bool) (x_4 Bool) (x_5 Int) (x_6 Int) (x_7 Int) (x_8 Int)) Bool)

(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.x Int) (m Int) (main.y Int)) (=> (and (not .s.1) .s.0 (not .s.2) (not .s.3) (not .s.4)) (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.x m main.y))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.x Int) (m Int) (main.y Int) (.s.0.next Bool) (.s.1.next Bool) (.s.2.next Bool) (.s.3.next Bool) (.s.4.next Bool) (n.next Int) (main.x.next Int) (m.next Int) (main.y.next Int)) (let ((a!1 (and .s.4 (and (not .s.3) (and .s.2 (and .s.1 .s.0))))) (a!2 (and (and (and (and .s.0.next .s.1.next) .s.2.next) (not .s.3.next)) .s.4.next (= n n.next) (= main.x main.x.next) (= m m.next) (= main.y main.y.next))) (a!3 (and (not .s.3) (and .s.2 (and .s.1 (not .s.0))))) (a!4 (and (not .s.3.next) (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!6 (and (not .s.3) (and (and (not .s.1) .s.0) .s.2))) (a!7 (and (not .s.3.next) (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!8 (and (not .s.3) (and .s.2 (and (not .s.1) (not .s.0))))) (a!9 (<= (+ n (* (- 1) main.y)) (- 1))) (a!10 (and (not .s.3.next) (and .s.2.next (and .s.0.next (not .s.1.next))))) (a!13 (and .s.4 (and (not .s.3) (and (not .s.2) (and .s.1 .s.0))))) (a!14 (and (not .s.3) (and (not .s.2) (and .s.1 (not .s.0))))) (a!16 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next (and (not .s.3.next) (and (and .s.0.next .s.1.next) (not .s.2.next))))) (a!17 (and (not .s.3.next) (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!19 (and (and (and (not .s.1) .s.0) (not .s.2)) (not .s.3))) (a!20 (and (not .s.4.next) .s.3.next (and .s.2.next (and .s.0.next (not .s.1.next))))) (a!21 (and (not .s.3) (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!22 (and (and (not .s.4) .s.3 (and .s.2 (and .s.1 .s.0))) (not (<= main.x m)))) (a!23 (and (and (not .s.4) .s.3 (and .s.2 (and .s.1 .s.0))) (<= main.x m))) (a!24 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next (not .s.3.next) (and (not .s.2.next) (and .s.0.next (not .s.1.next))))) (a!25 (and (not .s.4) .s.3 (and .s.2 (and .s.1 (not .s.0))))) (a!26 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.0.next (not .s.1.next))))) (a!27 (and (not .s.4) .s.3 (and (and (not .s.1) .s.0) .s.2))) (a!28 (and (= main.y main.y.next) (= m m.next) (= n n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!29 (and (not .s.4) .s.3 (and .s.2 (and (not .s.1) (not .s.0))))) (a!30 (= (+ main.y (* (- 1) main.y.next)) (- 1))) (a!31 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 .s.0)))) (a!32 (<= 1 (+ main.x (* (- 1) m)))) (a!34 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!35 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 (not .s.0))))) (a!36 (= (+ main.x (* (- 1) main.x.next)) (- 1))) (a!38 (and (not .s.4) (and (and (not .s.1) .s.0) (not .s.2)) .s.3)) (a!39 (<= 1 (+ n (* (- 1) main.x)))) (a!40 (and (not .s.3.next) (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!42 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!43 (and (not .s.4) .s.3 (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!44 (and (not .s.4) (and (not .s.3) (and .s.2 (and .s.1 .s.0))))) (a!45 (<= 1 (+ n (* (- 1) m)))) (a!46 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!51 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (and (and (and .s.0.next .s.1.next) .s.2.next) (not .s.3.next)) (not .s.4.next))) (a!53 (and (not .s.4) (and (not .s.3) (and (not .s.2) (and .s.1 .s.0))))) (a!56 (and (= m m.next) (= main.x main.x.next) (= n n.next) (= m main.y.next) (not .s.4.next) (and (not .s.3.next) (and (and .s.0.next .s.1.next) (not .s.2.next)))))) (let ((a!5 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) a!4)) (a!11 (or (not (and (and .s.4 a!8) (not a!9))) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next a!10))) (a!12 (or a!2 (not (and (and .s.4 a!8) a!9)))) (a!15 (not (and (and .s.4 a!14) (not (<= n main.x))))) (a!18 (or (not (and (and .s.4 a!14) (<= n main.x))) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next a!17))) (a!33 (or (not (and a!31 (not a!32))) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) (and (and .s.0.next .s.1.next) .s.2.next) .s.3.next))) (a!37 (or (not a!35) (and (= main.y main.y.next) (= m m.next) (= n n.next) a!36 (not .s.4.next) .s.3.next (and (and .s.0.next .s.1.next) (not .s.2.next))))) (a!41 (or (not (and a!38 (not a!39))) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next a!40))) (a!47 (or (not (and a!44 (not a!45))) a!46)) (a!49 (not (and (and (not .s.4) a!6) (not (<= 0 m))))) (a!50 (not (and (and (not .s.4) a!6) (<= 0 m)))) (a!54 (not (and a!53 (not (<= 0 n))))) (a!55 (or (not (and a!53 (<= 0 n))) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) a!10))) (a!57 (or (not (and (not .s.4) a!14)) a!56)) (a!58 (or (not (and a!19 (not .s.4))) (and (= main.y main.y.next) (= m m.next) (= n n.next) (= main.x.next 0) (not .s.4.next) a!40)))) (let ((a!48 (or a!5 (not (and (not .s.4) a!3)))) (a!52 (or a!5 (not (and (not .s.4) a!8)))) (a!59 (or a!5 (not (and (not .s.4) a!21))))) (let ((a!60 (and (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.x m main.y) (or (not a!1) a!2) (or (not (and .s.4 a!3)) a!5) (or (not (and .s.4 a!6)) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next a!7)) a!11 a!12 (or a!5 (not a!13)) (or a!15 a!16) a!18 (or (not (and a!19 .s.4)) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) a!20)) (or a!5 (not (and .s.4 a!21))) (or (not a!22) (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) .s.4.next a!4)) (or (not a!23) a!24) (or (not a!25) a!26) (or (not a!27) a!28) (or (not a!29) (and (= m m.next) (= main.x main.x.next) (= n n.next) a!20 a!30)) a!33 (or (not (and a!31 a!32)) a!34) a!37 a!41 (or (not (and a!38 a!39)) a!42) (or a!5 (not a!43)) a!47 (or a!26 (not (and a!44 a!45))) a!48 (or a!49 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) a!7)) (or a!50 a!51) a!52 (or a!54 (and (= main.y main.y.next) (= m m.next) (= main.x main.x.next) (= n n.next) (not .s.4.next) a!17)) a!55 a!57 a!58 a!59))) (=> a!60 (state .s.1.next .s.0.next .s.2.next .s.3.next .s.4.next n.next main.x.next m.next main.y.next))))))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (n Int) (main.x Int) (m Int) (main.y Int)) (let ((a!1 (not (not (and .s.4 (not .s.3) .s.2 .s.1 .s.0))))) (=> (and (state .s.1 .s.0 .s.2 .s.3 .s.4 n main.x m main.y) a!1) false))))

(check-synth)

