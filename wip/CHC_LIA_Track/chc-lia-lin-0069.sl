(set-logic CHC_LIA)

(synth-fun state ((x_0 Bool) (x_1 Bool) (x_2 Bool) (x_3 Bool) (x_4 Bool) (x_5 Int) (x_6 Int) (x_7 Int)) Bool)

(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.y Int) (main.n Int) (main.x Int)) (=> (and (not .s.1) .s.0 (not .s.2) (not .s.3) (not .s.4)) (state .s.1 .s.0 .s.2 .s.3 .s.4 main.y main.n main.x))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.y Int) (main.n Int) (main.x Int) (main.y.next Int) (main.n.next Int) (main.x.next Int) (.s.4.next Bool) (.s.3.next Bool) (.s.2.next Bool) (.s.1.next Bool) (.s.0.next Bool)) (let ((a!1 (and .s.3 (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!2 (and (not .s.3.next) (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!4 (and .s.4 (and (not .s.3) (and .s.2 (and .s.1 .s.0))))) (a!5 (and (not .s.4.next) (and (not .s.3.next) (and .s.2.next (and .s.1.next .s.0.next))))) (a!6 (and (not .s.3) (and .s.2 (and .s.1 (not .s.0))))) (a!7 (= (+ main.y (* (- 1) main.y.next)) 1)) (a!9 (and (not .s.3) (and (and (not .s.1) .s.0) .s.2))) (a!10 (<= (+ main.n (* (- 1) main.x)) (- 1))) (a!11 (and (not .s.3.next) (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!13 (and .s.3.next (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!15 (and (not .s.3) (and .s.2 (and (not .s.1) (not .s.0))))) (a!16 (and (not .s.3.next) (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!18 (and .s.4 (and (not .s.3) (and (not .s.2) (and .s.1 .s.0))))) (a!19 (= (+ main.x (* (- 1) main.x.next)) (- 1))) (a!20 (and (not .s.3) (and (not .s.2) (and .s.1 (not .s.0))))) (a!21 (and (not .s.3.next) (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!23 (and (and (and (not .s.1) .s.0) (not .s.2)) (not .s.3))) (a!24 (and (not .s.3) (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!25 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next (not .s.3.next) (and (not .s.2.next) (and (not .s.1.next) .s.0.next)))) (a!26 (not (and (not .s.4) .s.3 (and .s.2 (and .s.1 .s.0))))) (a!28 (and (not .s.4) .s.3 (and .s.2 (and .s.1 (not .s.0))))) (a!29 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next .s.0.next)))) (a!30 (and (not .s.4) .s.3 (and (and (not .s.1) .s.0) .s.2))) (a!31 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!32 (and (not .s.4) .s.3 (and .s.2 (and (not .s.1) (not .s.0))))) (a!33 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 .s.0)))) (a!34 (<= (+ (* 2 main.n) (* (- 1) main.x)) (- 3))) (a!36 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!37 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 (not .s.0))))) (a!41 (and (not .s.4) (and (and (not .s.1) .s.0) (not .s.2)) .s.3)) (a!43 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!45 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and (not .s.1.next) .s.0.next)))) (a!47 (and (not .s.4) (and (not .s.3) (and .s.2 (and .s.1 .s.0))))) (a!49 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next (and (not .s.3.next) (and (not .s.2.next) (and .s.1.next .s.0.next))))) (a!51 (= (+ main.y (* (- 1) main.y.next)) (- 1))) (a!55 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next (and (not .s.3.next) .s.2.next (and (not .s.1.next) .s.0.next)))) (a!56 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) (and (not .s.3.next) .s.2.next (and (not .s.1.next) .s.0.next)))) (a!58 (and (not .s.4) (and (not .s.3) (and (not .s.2) (and .s.1 .s.0))))) (a!60 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) (and (not .s.3.next) (and (not .s.2.next) (and .s.1.next .s.0.next)))))) (let ((a!3 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) a!2)) (a!8 (and (= main.n main.n.next) (= main.x main.x.next) a!7 .s.4.next (and (not .s.3.next) (and .s.2.next (and .s.1.next .s.0.next))))) (a!12 (or (not (and (and .s.4 a!9) a!10)) (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next a!11))) (a!14 (or (not (and (and .s.4 a!9) (not a!10))) (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next a!13))) (a!17 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) a!16)) (a!22 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next a!21)) (a!27 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) .s.4.next a!2)) (a!35 (or a!29 (not (and a!33 (not a!34))))) (a!38 (not (and a!37 (= main.y (- 1))))) (a!40 (and a!37 (not (= main.y (- 1))))) (a!42 (not (and a!41 (not (<= 0 main.n))))) (a!44 (or (not (and a!41 (<= 0 main.n))) a!43)) (a!46 (or (not (and (not .s.4) a!1)) a!45)) (a!48 (not (and a!47 (not (<= 0 main.y))))) (a!50 (or (not (and a!47 (<= 0 main.y))) a!49)) (a!52 (or (not (and (not .s.4) a!6)) (and (= main.n main.n.next) (= main.x main.x.next) a!5 a!51))) (a!53 (not (and (and (not .s.4) a!9) (<= main.x main.n)))) (a!54 (not (and (and (not .s.4) a!9) (not (<= main.x main.n))))) (a!57 (or (not (and (not .s.4) a!15)) a!56)) (a!59 (not (and (not (<= 0 main.n)) (and (not .s.4) a!20)))) (a!61 (not (and (<= 0 main.n) (and (not .s.4) a!20)))) (a!62 (or (not (and a!23 (not .s.4))) (and (= main.n main.n.next) (= main.y.next 0) (= main.x.next 0) (not .s.4.next) a!21)))) (let ((a!39 (or a!38 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next .s.0.next))))) (a!63 (or a!3 (not (and (not .s.4) a!24))))) (let ((a!64 (and (state .s.1 .s.0 .s.2 .s.3 .s.4 main.y main.n main.x) (or (not (and .s.4 a!1)) a!3) (or (not a!4) (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) a!5)) (or (not (and .s.4 a!6)) a!8) a!12 a!14 (or (not (and .s.4 a!15)) a!17) (or (not a!18) (and (= main.y main.y.next) (= main.n main.n.next) a!19 .s.4.next a!16)) (or (not (and .s.4 a!20)) a!22) (or a!3 (not (and a!23 .s.4))) (or (not (and .s.4 a!24)) a!25) (or a!26 a!27) (or (not a!28) a!29) (or (not a!30) a!31) (or a!22 (not a!32)) a!35 (or (not (and a!33 a!34)) a!36) a!39 (or a!27 (not a!40)) (or a!25 a!42) a!44 a!46 (or a!48 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) a!13)) a!50 a!52 (or a!53 (and (= main.y main.y.next) (= main.n main.n.next) (= main.x main.x.next) (not .s.4.next) a!11)) (or a!54 a!55) a!57 (or a!3 (not a!58)) (or a!59 a!60) (or a!17 a!61) a!62 a!63))) (=> a!64 (state .s.1.next .s.0.next .s.2.next .s.3.next .s.4.next main.y.next main.n.next main.x.next))))))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.y Int) (main.n Int) (main.x Int)) (let ((a!1 (not (not (and .s.4 (not .s.3) (not .s.2) .s.1 (not .s.0)))))) (=> (and (state .s.1 .s.0 .s.2 .s.3 .s.4 main.y main.n main.x) a!1) false))))

(check-synth)

