(set-logic CHC_LIA)

(synth-fun INV1 ((x_0 Int) (x_1 Int) (x_2 Int) (x_3 Int) (x_4 Int) (x_5 Int) (x_6 Int) (x_7 Int)) Bool)

(constraint (forall ((E Int) (C Int) (A Int) (H Int) (B Int) (D Int) (I Int) (F Int) (G Int)) (let ((a!1 (not (>= (+ A (- 1)) 0)))) (let ((a!2 (and (= (* (- 1) E) 0) (>= (+ (- 10 C) (- 1)) 0) a!1 (not (= H 0)) (INV1 A B C D H I F G) (= F G)))) (=> a!2 (INV1 A B C D E D F G))))))
(constraint (forall ((E Int) (D Int) (F Int) (C Int) (A Int) (I Int) (B Int) (J Int) (G Int) (H Int)) (let ((a!1 (not (>= (+ (- 100 C) (- 1)) 0))) (a!2 (not (>= (+ (- 10 C) (- 1)) 0))) (a!3 (not (>= (+ A (- 1)) 0)))) (let ((a!4 (and (= (* (- 1) E) 0) (= (+ D 2) F) (>= (+ (- 1000 C) (- 1)) 0) a!1 a!2 a!3 (not (= I 0)) (INV1 A B C D I J G H) (= G H)))) (=> a!4 (INV1 A B C D E F G H))))))
(constraint (forall ((I Int) (D Int) (C Int) (J Int) (A Int) (E Int) (B Int) (F Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10000 C) (+ J (- 10000))) (- 1))) (a!2 (>= (+ J (* (- 10000) C)) 0)) (a!3 (not (>= (+ (- 10000 J) (- 1)) 0))) (a!4 (not (>= (+ (- 1000 J) (- 1)) 0))) (a!5 (not (>= (+ (- 100 J) (- 1)) 0))) (a!6 (not (>= (+ (- 10 J) (- 1)) 0))) (a!7 (not (>= (+ A (- 1)) 0)))) (=> (and (= (+ I 4) D) (>= a!1 0) a!2 a!3 a!4 a!5 a!6 a!7 (not (= E 0)) (INV1 A B J I E F G H) (= G H)) (INV1 A B C D E F G H)))))
(constraint (forall ((E Int) (D Int) (F Int) (C Int) (A Int) (I Int) (B Int) (J Int) (G Int) (H Int)) (let ((a!1 (not (>= (+ (- 1000 C) (- 1)) 0))) (a!2 (not (>= (+ (- 100 C) (- 1)) 0))) (a!3 (not (>= (+ (- 10 C) (- 1)) 0))) (a!4 (not (>= (+ A (- 1)) 0)))) (let ((a!5 (and (= (* (- 1) E) 0) (= (+ D 3) F) (>= (+ (- 10000 C) (- 1)) 0) a!1 a!2 a!3 a!4 (not (= I 0)) (INV1 A B C D I J G H) (= G H)))) (=> a!5 (INV1 A B C D E F G H))))))
(constraint (forall ((E Int) (D Int) (F Int) (C Int) (A Int) (I Int) (B Int) (J Int) (G Int) (H Int)) (let ((a!1 (not (>= (+ (- 10 C) (- 1)) 0))) (a!2 (not (>= (+ A (- 1)) 0)))) (let ((a!3 (and (= (* (- 1) E) 0) (= (+ D 1) F) (>= (+ (- 100 C) (- 1)) 0) a!1 a!2 (not (= I 0)) (INV1 A B C D I J G H) (= G H)))) (=> a!3 (INV1 A B C D E F G H))))))
(constraint (forall ((H Int) (B Int) (E Int) (A Int) (I Int) (C Int) (J Int) (D Int) (K Int) (F Int) (G Int)) (let ((a!1 (+ (- (* 10 A) (+ I (- 10))) (- 1))) (a!2 (>= (+ I (* (- 10) A)) 0))) (let ((a!3 (and (= (+ H 1) B) (= (* (- 1) E) 0) (>= a!1 0) a!2 (>= (+ (- 10 C) (- 1)) 0) (>= (+ I (- 1)) 0) (not (= J 0)) (INV1 I H C D J K F G) (= F G)))) (=> a!3 (INV1 A B C D E D F G))))))
(constraint (forall ((I Int) (B Int) (E Int) (D Int) (F Int) (A Int) (J Int) (C Int) (K Int) (L Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10 A) (+ J (- 10))) (- 1))) (a!2 (>= (+ J (* (- 10) A)) 0)) (a!3 (not (>= (+ (- 100 C) (- 1)) 0))) (a!4 (not (>= (+ (- 10 C) (- 1)) 0)))) (let ((a!5 (and (= (+ I 1) B) (= (* (- 1) E) 0) (= (+ D 2) F) (>= a!1 0) a!2 (>= (+ (- 1000 C) (- 1)) 0) a!3 a!4 (>= (+ J (- 1)) 0) (not (= K 0)) (INV1 J I C D K L G H) (= G H)))) (=> a!5 (INV1 A B C D E F G H))))))
(constraint (forall ((I Int) (B Int) (J Int) (D Int) (C Int) (K Int) (A Int) (L Int) (E Int) (F Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10000 C) (+ K (- 10000))) (- 1))) (a!2 (>= (+ K (* (- 10000) C)) 0)) (a!3 (+ (- (* 10 A) (+ L (- 10))) (- 1))) (a!4 (>= (+ L (* (- 10) A)) 0)) (a!5 (not (>= (+ (- 10000 K) (- 1)) 0))) (a!6 (not (>= (+ (- 1000 K) (- 1)) 0))) (a!7 (not (>= (+ (- 100 K) (- 1)) 0))) (a!8 (not (>= (+ (- 10 K) (- 1)) 0)))) (let ((a!9 (and (= (+ I 1) B) (= (+ J 4) D) (>= a!1 0) a!2 (>= a!3 0) a!4 a!5 a!6 a!7 a!8 (>= (+ L (- 1)) 0) (not (= E 0)) (INV1 L I K J E F G H) (= G H)))) (=> a!9 (INV1 A B C D E F G H))))))
(constraint (forall ((I Int) (B Int) (E Int) (D Int) (F Int) (A Int) (J Int) (C Int) (K Int) (L Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10 A) (+ J (- 10))) (- 1))) (a!2 (>= (+ J (* (- 10) A)) 0)) (a!3 (not (>= (+ (- 1000 C) (- 1)) 0))) (a!4 (not (>= (+ (- 100 C) (- 1)) 0))) (a!5 (not (>= (+ (- 10 C) (- 1)) 0)))) (let ((a!6 (and (= (+ I 1) B) (= (* (- 1) E) 0) (= (+ D 3) F) (>= a!1 0) a!2 (>= (+ (- 10000 C) (- 1)) 0) a!3 a!4 a!5 (>= (+ J (- 1)) 0) (not (= K 0)) (INV1 J I C D K L G H) (= G H)))) (=> a!6 (INV1 A B C D E F G H))))))
(constraint (forall ((I Int) (B Int) (E Int) (D Int) (F Int) (A Int) (J Int) (C Int) (K Int) (L Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10 A) (+ J (- 10))) (- 1))) (a!2 (>= (+ J (* (- 10) A)) 0)) (a!3 (not (>= (+ (- 10 C) (- 1)) 0)))) (let ((a!4 (and (= (+ I 1) B) (= (* (- 1) E) 0) (= (+ D 1) F) (>= a!1 0) a!2 (>= (+ (- 100 C) (- 1)) 0) a!3 (>= (+ J (- 1)) 0) (not (= K 0)) (INV1 J I C D K L G H) (= G H)))) (=> a!4 (INV1 A B C D E F G H))))))
(constraint (forall ((I Int) (B Int) (A Int) (J Int) (E Int) (C Int) (D Int) (F Int) (G Int) (H Int)) (let ((a!1 (+ (- (* 10 A) (+ J (- 10))) (- 1))) (a!2 (>= (+ J (* (- 10) A)) 0))) (let ((a!3 (and (= (+ I 1) B) (>= a!1 0) a!2 (>= (+ J (- 1)) 0) (= E 0) (INV1 J I C D E F G H) (= G H)))) (=> a!3 (INV1 A B C D E F G H))))))
(constraint (forall ((A Int) (B Int) (C Int) (D Int) (E Int) (F Int) (G Int) (H Int)) (let ((a!1 (not (>= (+ C (- 1)) 0)))) (=> (and (not (= A B)) a!1 (= D 0) (INV1 C A E F D B G H) (= G H)) false))))
(constraint (forall ((B Int) (D Int) (E Int) (F Int) (A Int) (G Int) (C Int)) (let ((a!1 (+ (- (* 10 A) (+ G (- 10))) (- 1))) (a!2 (>= (+ G (* (- 10) A)) 0))) (let ((a!3 (and (= (* (- 1) B) (- 1)) (= (* (- 1) D) (- 1)) (= (* (- 1) E) (- 1)) (= (* (- 1) F) 1) (>= a!1 0) a!2 (= G C)))) (=> a!3 (INV1 A B C D E F G C))))))

(check-synth)

