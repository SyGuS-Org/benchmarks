(set-logic CHC_LIA)

(synth-fun state ((x_0 Bool) (x_1 Bool) (x_2 Bool) (x_3 Bool) (x_4 Bool) (x_5 Int) (x_6 Int) (x_7 Int) (x_8 Int)) Bool)

(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.n Int) (main.k Int) (main.j Int) (main.i Int)) (=> (and (not .s.1) .s.0 (not .s.2) (not .s.3) (not .s.4)) (state .s.1 .s.0 .s.2 .s.3 .s.4 main.n main.k main.j main.i))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.n Int) (main.k Int) (main.j Int) (main.i Int) (main.n.next Int) (main.k.next Int) (main.j.next Int) (main.i.next Int) (.s.4.next Bool) (.s.3.next Bool) (.s.2.next Bool) (.s.1.next Bool) (.s.0.next Bool)) (let ((a!1 (and (not .s.3) (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!2 (and (not .s.3.next) (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!4 (not (and (not .s.4) .s.3 (and .s.2 (and .s.1 .s.0))))) (a!5 (and (not .s.4.next) (not .s.3.next) (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!6 (and (not .s.4) .s.3 (and .s.2 (and .s.1 (not .s.0))))) (a!7 (= (+ main.i (* (- 1) main.i.next)) (- 1))) (a!9 (and (not .s.4) .s.3 (and (and (not .s.1) .s.0) .s.2))) (a!10 (and (not .s.4.next) (not .s.3.next) (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!11 (and (not .s.4) .s.3 (and .s.2 (and (not .s.1) (not .s.0))))) (a!12 (= (+ main.j (* (- 1) main.j.next)) (- 1))) (a!14 (not (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 .s.0))))) (a!15 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next .s.0.next)))) (a!16 (and (not .s.4) .s.3 (and (not .s.2) (and .s.1 (not .s.0))))) (a!17 (and (not .s.4.next) (not .s.3.next) (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!18 (and (not .s.4) (and (and (not .s.1) .s.0) (not .s.2)) .s.3)) (a!19 (= (+ main.k (* (- 1) main.k.next)) (- 1))) (a!21 (and (not .s.4) .s.3 (and (not .s.2) (and (not .s.1) (not .s.0))))) (a!23 (and (not .s.4) (not .s.3) (and .s.2 (and .s.1 .s.0)))) (a!24 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and (not .s.2.next) (and (not .s.1.next) (not .s.0.next))))) (a!27 (and (not .s.4) (not .s.3) (and .s.2 (and .s.1 (not .s.0))))) (a!28 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) (not .s.0.next))))) (a!32 (and (not .s.4) (not .s.3) (and (and (not .s.1) .s.0) .s.2))) (a!33 (and (not .s.4) (not .s.3) (and .s.2 (and (not .s.1) (not .s.0))))) (a!35 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and .s.2.next (and (not .s.1.next) .s.0.next)))) (a!36 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next (not .s.0.next))))) (a!38 (not (and (not .s.4) (not .s.3) (and (not .s.2) (and .s.1 .s.0))))) (a!39 (and (not .s.4) (not .s.3) (and (not .s.2) (and .s.1 (not .s.0))))) (a!43 (and (and (and (not .s.1) .s.0) (not .s.2)) (not .s.3) (not .s.4)))) (let ((a!3 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) a!2)) (a!8 (or (not a!6) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) a!7 (not .s.4.next) .s.3.next (and .s.2.next (and .s.1.next .s.0.next))))) (a!13 (and (= main.n main.n.next) (= main.k main.k.next) (= main.i main.i.next) a!12 (not .s.4.next) .s.3.next (and .s.2.next (and (not .s.1.next) .s.0.next)))) (a!20 (and (= main.n main.n.next) (= main.j main.j.next) (= main.i main.i.next) a!19 (not .s.4.next) .s.3.next (and (not .s.2.next) (and .s.1.next (not .s.0.next))))) (a!22 (or (not a!21) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) .s.3.next (not .s.2.next) (and (not .s.1.next) .s.0.next)))) (a!25 (or (not (and a!23 (<= main.i main.k))) a!24)) (a!26 (not (and a!23 (not (<= main.i main.k))))) (a!29 (or (not (and a!27 (<= main.n main.k))) a!28)) (a!30 (not (and a!27 (not (<= main.n main.k))))) (a!34 (not (and a!33 (not (<= main.n main.j))))) (a!37 (or (not (and a!33 (<= main.n main.j))) a!36)) (a!40 (or (not (and a!39 (<= main.n main.i))) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) .s.4.next a!2))) (a!41 (not (and a!39 (not (<= main.n main.i)))))) (let ((a!31 (or a!30 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and .s.2.next (and .s.1.next .s.0.next))))) (a!42 (or a!41 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) (not .s.4.next) (not .s.3.next) (and (not .s.2.next) (and .s.1.next .s.0.next))))) (a!44 (or a!3 (not (and (not .s.4) a!1))))) (let ((a!45 (and (state .s.1 .s.0 .s.2 .s.3 .s.4 main.n main.k main.j main.i) (or (not (and .s.4 a!1)) a!3) (or a!4 (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) a!5)) a!8 (or (not a!9) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) a!10)) (or (not a!11) a!13) (or a!14 a!15) (or (not a!16) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) (= main.i main.i.next) a!17)) (or (not a!18) a!20) a!22 a!25 (or a!15 a!26) a!29 a!31 (or (not a!32) (and (= main.n main.n.next) (= main.j main.j.next) (= main.i main.i.next) a!17 (= main.k.next main.j))) (or a!34 a!35) a!37 (or a!38 (and (= main.n main.n.next) (= main.k main.k.next) (= main.i main.i.next) a!10 (= main.j.next main.i))) a!40 a!42 (or (not a!43) (and (= main.n main.n.next) (= main.k main.k.next) (= main.j main.j.next) a!5 (= main.i.next 0))) a!44))) (=> a!45 (state .s.1.next .s.0.next .s.2.next .s.3.next .s.4.next main.n.next main.k.next main.j.next main.i.next))))))))
(constraint (forall ((.s.1 Bool) (.s.0 Bool) (.s.2 Bool) (.s.3 Bool) (.s.4 Bool) (main.n Int) (main.k Int) (main.j Int) (main.i Int)) (let ((a!1 (not (not (and (not .s.4) .s.3 (not .s.2) .s.1 .s.0))))) (=> (and (state .s.1 .s.0 .s.2 .s.3 .s.4 main.n main.k main.j main.i) a!1) false))))

(check-synth)

